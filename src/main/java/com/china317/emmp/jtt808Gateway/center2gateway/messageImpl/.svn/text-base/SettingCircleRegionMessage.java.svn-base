package com.china317.emmp.jtt808Gateway.center2gateway.messageImpl;

import java.util.ArrayList;
import java.util.List;

import com.china317.core.codec.jtt808_2011.JT808MsgId;
import com.china317.core.codec.jtt808_2011.UnitPackJT808;
import com.china317.core.codec.jtt808_2011.bodyPartImpl.JT808MsgBody_0x8600;
import com.china317.core.codec.jtt808_2011.bodyPartImpl.JT808MsgBody_0x8600_region_item;
import com.china317.emmp.jtt808Gateway.center2gateway.MessageCommands;

/**
 * @date 2013-8-8 下午01:24:45
 * @author: Greg
 * @description:设置圆形区域
 */
public class SettingCircleRegionMessage extends BaseDownMessage {

	/** 更新 */
	public static final byte		SETTING_UPDATE	= 0;	// 更新区域
	/** 追加 */
	public static final byte		SETTING_ADD		= 1;	// 追加区域
	/** 修改 */
	public static final byte		SETTING_MODIFY	= 2;	// 修改区域
	//
	private byte					settingType;			// 设置属性
	private byte					regionCount;			// 区域总数
	private List<CircleRegionItem>	regionItems;			// 区域项

	/**
	 * @param mobileNum
	 *            手机号
	 * @param messageKey
	 * @param settingType
	 *            设置属性
	 * @param regionItem
	 *            区域项列表 生成设置圆形区域协议封装包
	 */
	public SettingCircleRegionMessage(String mobileNum, String messageKey, byte settingType, List<CircleRegionItem> regionItems) {
		this.setMobileNum(mobileNum);
		this.setMessageKey(messageKey);
		if (regionItems != null) {
			this.setRegionCount((byte) regionItems.size());
		}
		this.setSettingType(settingType);
		this.setRegionItems(regionItems);
		this.setCommand(MessageCommands.Server_Setting_Circle_Region);
	}

	@Override
	public UnitPackJT808 pack() throws Exception {
		UnitPackJT808 pack = new UnitPackJT808(JT808MsgId.MSGID_SERVER_setting_circle_region);
		pack.setMobileNum(this.getMobileNum());
		JT808MsgBody_0x8600 body = new JT808MsgBody_0x8600();
		body.setSettingType(this.getSettingType());
		body.setRegionCount(this.getRegionCount());
		List<JT808MsgBody_0x8600_region_item> regionItemList = null;
		if (this.regionItems != null) {
			for (CircleRegionItem item : this.regionItems) {
				if (regionItemList == null) {
					regionItemList = new ArrayList<JT808MsgBody_0x8600_region_item>();
				}
				JT808MsgBody_0x8600_region_item i = new JT808MsgBody_0x8600_region_item();
				i.setCenterLatitude(item.getCenterLatitude());
				i.setCenterLongitude(item.getCenterLongitude());
				i.setMaxSpeed(item.getMaxSpeed());
				i.setOverspeedTime(item.getOverspeedTime());
				i.setRadius(item.getRadius());
				i.setRegionId(item.getRegionId());
				i.setRegionAttribute(item.getRegionAttribute().getAttribute());
				i.setStartTime(item.getStartTime());
				i.setStopTime(item.getStopTime());

				regionItemList.add(i);
			}
			body.setRegionItems(regionItemList);
		}
		pack.setMsgBody(body);
		return pack;
	}

	public byte getSettingType() {
		return settingType;
	}

	/** 设置属性 */
	public void setSettingType(byte settingType) {
		this.settingType = settingType;
	}

	public byte getRegionCount() {
		return regionCount;
	}

	/** 区域数 */
	public void setRegionCount(byte regionCount) {
		this.regionCount = regionCount;
	}

	public List<CircleRegionItem> getRegionItems() {
		return regionItems;
	}

	/** 区域列 */
	public void setRegionItems(List<CircleRegionItem> regionItems) {
		this.regionItems = regionItems;
	}

}
