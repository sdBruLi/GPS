package com.china317.emmp.jtt808Gateway.server.transport;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.mina.core.session.IoSession;

import com.china317.core.codec.jtt808_2011.JT808MsgId;
import com.china317.core.codec.jtt808_2011.UnitPackJT808;
import com.china317.core.codec.jtt808_2011.bodyPartImpl.JT808MsgBody_0x0200;
import com.china317.core.codec.jtt808_2011.bodyPartImpl.JT808MsgBody_0x8001;
import com.china317.core.distributor.DistributorHandlerAdapter;
import com.china317.emmp.jtt808Gateway.server.processor.Gateway2VehProcessor;

public class VehUdpHandler extends DistributorHandlerAdapter {
	private final static Log	log	= LogFactory.getLog(VehUdpHandler.class);

	
	@Override
	public void messageReceived(IoSession session, Object message)
			throws Exception {
		log.debug("upd veh Handler...");

		if (message instanceof UnitPackJT808) {
			UnitPackJT808 pack = (UnitPackJT808) message;
			if (pack.isCRCResult()) {
				log.debug("received(" + session.getRemoteAddress() + ") sessionid=" + session.getId() + ", " + pack.toString(2) + "");
				int msgid = pack.getMsgID();
				
				switch (msgid) {
				case JT808MsgId.MSGID_CLIENT_register:
					break;
				case JT808MsgId.MSGID_CLIENT_deregister:
					break;
				case JT808MsgId.MSGID_CLIENT_authentication:
					session.setAttribute("MOBILE_NUM", pack.getMobileNum());
					break;
				case JT808MsgId.MSGID_CLIENT_position:
					JT808MsgBody_0x0200 position = (JT808MsgBody_0x0200) pack.getMsgBody();
					if (position.isAlarm()) {
					} else {
						session.write(JT808MsgBody_0x8001.getCommonResponseOK(pack));
					}
					
					break;
				default:
					if (Gateway2VehProcessor.verifyAuth(session)) {
						session.write(JT808MsgBody_0x8001.getCommonResponseOK(pack));
					} else {
						
						if (msgid == JT808MsgId.MSGID_CLIENT_multimedia_upload) {
							session.write(JT808MsgBody_0x8001.getCommonResponseOK(pack));
							log.info("multimedia_upload_authentication verify ok");
						} else {
							session.close(false);
							log.info("authentication verify error");
						}
					}
					break;
				}
			}
			//log.info("The message received is [" + unit.getBuffer().getHexDump() + "]");
		}
		
		super.messageReceived(session, message);
	
	}
	
}
